{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries2 from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\n\n/**\n * Created by nixuan on 2017/7/14.\n */\nvar RedPacketType = {\n  NORMAL: 100,\n  LUCK: 200\n};\nvar map = {};\nmap[RedPacketType.NORMAL] = '普通';\nmap[RedPacketType.LUCK] = '拼手气';\nvar options = [];\n\nfor (var _i = 0, _Object$entries = _Object$entries2(map); _i < _Object$entries.length; _i++) {\n  var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n      val = _Object$entries$_i[0],\n      name = _Object$entries$_i[1];\n\n  options.push({\n    val: Number(val),\n    name: name\n  });\n}\n\nRedPacketType.map = map;\nRedPacketType.options = options;\n\nRedPacketType.getName = function (type) {\n  return map[type] || '未知';\n};\n\nRedPacketType.getType = function (name) {\n  for (var type in map) {\n    if (name === map[type]) {\n      return _parseInt(type, 10);\n    }\n  }\n};\n\nexport default RedPacketType;","map":{"version":3,"sources":["/Users/lotuslwb/Documents/MJobs/orangeLove/constants/RedPacketType.js"],"names":["RedPacketType","NORMAL","LUCK","map","options","val","name","push","Number","getName","type","getType"],"mappings":";;;;AAAA;;;AAGA,IAAMA,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,GADU;AAElBC,EAAAA,IAAI,EAAE;AAFY,CAAtB;AAKA,IAAMC,GAAG,GAAG,EAAZ;AACAA,GAAG,CAACH,aAAa,CAACC,MAAf,CAAH,GAA4B,IAA5B;AACAE,GAAG,CAACH,aAAa,CAACE,IAAf,CAAH,GAA0B,KAA1B;AAEA,IAAME,OAAO,GAAG,EAAhB;;AACA,mCAAwB,iBAAeD,GAAf,CAAxB,qCAA6C;AAAA;AAAA,MAAnCE,GAAmC;AAAA,MAA9BC,IAA8B;;AACzCF,EAAAA,OAAO,CAACG,IAAR,CAAa;AACTF,IAAAA,GAAG,EAAEG,MAAM,CAACH,GAAD,CADF;AAETC,IAAAA,IAAI,EAAJA;AAFS,GAAb;AAIH;;AAEDN,aAAa,CAACG,GAAd,GAAoBA,GAApB;AACAH,aAAa,CAACI,OAAd,GAAwBA,OAAxB;;AAEAJ,aAAa,CAACS,OAAd,GAAwB,UAACC,IAAD,EAAU;AAC9B,SAAOP,GAAG,CAACO,IAAD,CAAH,IAAa,IAApB;AACH,CAFD;;AAIAV,aAAa,CAACW,OAAd,GAAwB,UAACL,IAAD,EAAU;AAC9B,OAAK,IAAII,IAAT,IAAiBP,GAAjB,EAAsB;AAClB,QAAIG,IAAI,KAAKH,GAAG,CAACO,IAAD,CAAhB,EAAwB;AACpB,aAAO,UAASA,IAAT,EAAe,EAAf,CAAP;AACH;AACJ;AACJ,CAND;;AAQA,eAAeV,aAAf","sourcesContent":["/**\n * Created by nixuan on 2017/7/14.\n */\nconst RedPacketType = {\n    NORMAL: 100,\n    LUCK: 200,\n};\n\nconst map = {};\nmap[RedPacketType.NORMAL] = '普通';\nmap[RedPacketType.LUCK] = '拼手气';\n\nconst options = [];\nfor (let [val, name] of Object.entries(map)) {\n    options.push({\n        val: Number(val),\n        name\n    });\n}\n\nRedPacketType.map = map;\nRedPacketType.options = options;\n\nRedPacketType.getName = (type) => {\n    return map[type] || '未知';\n};\n\nRedPacketType.getType = (name) => {\n    for (let type in map) {\n        if (name === map[type]) {\n            return parseInt(type, 10);\n        }\n    }\n};\n\nexport default RedPacketType;\n"]},"metadata":{},"sourceType":"module"}