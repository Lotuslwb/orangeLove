{"ast":null,"code":"import _ActivityIndicator from \"antd-mobile/lib/activity-indicator\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _Radio from \"antd-mobile/lib/radio\";\n\nvar _class;\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport Link from 'next/link';\nimport { createForm } from 'rc-form';\nimport PageWrapper from \"../../components/PageWrapper\";\nimport RedPacketType from \"../../constants/RedPacketType\";\nimport agent from \"../../utils/agent\";\nimport styles from \"./index.less\";\nimport pageStore from \"./store\";\nimport storage from \"../../utils/storage\";\nimport Router from 'next/router';\nvar RadioItem = _Radio.RadioItem;\n\nvar Page = observer(_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Page, _React$Component);\n\n  function Page(props) {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Page).call(this, props));\n    _this.handleTest = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                Router.push('/baby'); // this.setState({\n                //     loading: true\n                // });\n                // const data = await agent.Baby.get();\n                // Router.push('/question');\n              } catch (e) {\n                Router.push('/baby');\n              } finally {\n                _this.setState({\n                  loading: false\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    var query = _this.props.query;\n\n    if (query.voteId) {\n      _this.voteId = query.voteId;\n    }\n\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loading = this.state.loading;\n      return React.createElement(React.Fragment, null, loading && React.createElement(_ActivityIndicator, {\n        toast: true,\n        text: \"\\u6B63\\u5728\\u52A0\\u8F7D\"\n      }), React.createElement(\"img\", {\n        onClick: this.handleTest,\n        className: styles.page,\n        src: \"/static/img/page/page1.jpg\"\n      }));\n    }\n  }]);\n\n  return Page;\n}(React.Component)) || _class;\n\nexport default PageWrapper(createForm()(Page));","map":{"version":3,"sources":["/Users/lotuslwb/Documents/MJobs/orangeLove/pages/index/index.js"],"names":["React","inject","observer","Link","createForm","PageWrapper","RedPacketType","agent","styles","pageStore","storage","Router","RadioItem","Page","props","handleTest","push","e","setState","loading","query","voteId","state","page","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAKA,SAAQC,UAAR,QAAyB,SAAzB;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAMC,SAAS,GAAG,OAAMA,SAAxB;;IAGMC,I,GADLX,Q;;;;;AAGG,gBAAYY,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AADe,UAcnBC,UAdmB;AAAA;AAAA,6BAcN;AAAA;AAAA;AAAA;AAAA;AACT,kBAAI;AACAJ,gBAAAA,MAAM,CAACK,IAAP,CAAY,OAAZ,EADA,CAEA;AACA;AACA;AACA;AACA;AACH,eAPD,CAOE,OAAOC,CAAP,EAAU;AACRN,gBAAAA,MAAM,CAACK,IAAP,CAAY,OAAZ;AACH,eATD,SASU;AACN,sBAAKE,QAAL,CAAc;AACVC,kBAAAA,OAAO,EAAE;AADC,iBAAd;AAGH;;AAdQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdM;AAAA,QAGRC,KAHQ,GAGC,MAAKN,KAHN,CAGRM,KAHQ;;AAIf,QAAIA,KAAK,CAACC,MAAV,EAAkB;AACd,YAAKA,MAAL,GAAcD,KAAK,CAACC,MAApB;AACH;;AAED,UAAKC,KAAL,GAAa;AAACH,MAAAA,OAAO,EAAE;AAAV,KAAb;AARe;AASlB;;;;wCAEmB,CACnB;;;6BAmBQ;AAAA,UACEA,OADF,GACa,KAAKG,KADlB,CACEH,OADF;AAEL,aACI,0CAEKA,OAAO,IACJ;AAAmB,QAAA,KAAK,MAAxB;AAAyB,QAAA,IAAI,EAAC;AAA9B,QAHR,EAKI;AAAK,QAAA,OAAO,EAAE,KAAKJ,UAAnB;AAA+B,QAAA,SAAS,EAAEP,MAAM,CAACe,IAAjD;AAAuD,QAAA,GAAG,EAAC;AAA3D,QALJ,CADJ;AASH;;;;EA5CcvB,KAAK,CAACwB,S;;AAgDzB,eAAenB,WAAW,CAACD,UAAU,GAAGS,IAAH,CAAX,CAA1B","sourcesContent":["import React from 'react';\nimport {inject, observer} from 'mobx-react';\nimport Link from 'next/link';\nimport {\n    NavBar, List, InputItem, WhiteSpace, WingBlank, Button, Toast, Flex, Radio, Result, Icon,\n    TextareaItem, Calendar, Card, ActivityIndicator\n} from 'antd-mobile';\nimport {createForm} from 'rc-form';\nimport PageWrapper from '@components/PageWrapper';\nimport RedPacketType from '@constants/RedPacketType';\nimport agent from \"@utils/agent\";\nimport styles from './index.less';\nimport pageStore from './store';\nimport storage from '@utils/storage';\nimport Router from 'next/router'\n\nconst RadioItem = Radio.RadioItem;\n\n@observer\nclass Page extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const {query} = this.props;\n        if (query.voteId) {\n            this.voteId = query.voteId;\n        }\n\n        this.state = {loading: false};\n    }\n\n    componentDidMount() {\n    }\n\n    handleTest = async () => {\n        try {\n            Router.push('/baby');\n            // this.setState({\n            //     loading: true\n            // });\n            // const data = await agent.Baby.get();\n            // Router.push('/question');\n        } catch (e) {\n            Router.push('/baby');\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    };\n\n    render() {\n        const {loading} = this.state;\n        return (\n            <>\n                {/*<Button type=\"primary\" onClick={this.handleTest}>点击测试</Button>*/}\n                {loading && (\n                    <ActivityIndicator toast text=\"正在加载\" />\n                )}\n                <img onClick={this.handleTest} className={styles.page} src='/static/img/page/page1.jpg' />\n            </>\n        )\n    }\n\n}\n\nexport default PageWrapper(createForm()(Page));\n"]},"metadata":{},"sourceType":"module"}