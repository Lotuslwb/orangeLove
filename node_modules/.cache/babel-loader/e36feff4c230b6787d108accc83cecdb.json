{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\n\n/* eslint no-useless-escape:0 */\nvar reg = /(((^https?:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)$/g;\nexport function isUrl(path) {\n  return reg.test(path);\n} // 新增代码\n\nvar randomPrefix = function randomPrefix() {\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var prefix = '';\n\n  for (var i = 0; i < 6; i++) {\n    prefix += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return prefix;\n};\n\nexport var UniqueKey = {\n  prefix: randomPrefix,\n  generate: function generate(prefix, index) {\n    if (!prefix) {\n      prefix = randomPrefix();\n    }\n\n    return \"\".concat(prefix, \"_\").concat(new Date().getTime(), \"_\").concat(index || '0');\n  }\n};\n\nvar isValidNumber = function isValidNumber(num) {\n  var number = +num;\n\n  if (number - number !== 0) {\n    return false;\n  }\n\n  if (number === num) {\n    return true;\n  }\n\n  if (typeof num === 'string') {\n    if (number === 0 && num.trim() === '') {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nexport var NumberUtils = {\n  isValid: isValidNumber,\n  isPositive: function isPositive(num) {\n    if (isValidNumber(num)) {\n      return _parseInt(num, 10) > 0;\n    }\n\n    return false;\n  },\n  isNegative: function isNegative(num) {\n    if (isValidNumber(num)) {\n      return _parseInt(num, 10) < 0;\n    }\n\n    return false;\n  }\n};\nexport var UrlParams = {\n  get: function get(search, field) {\n    var query = search.substr(1);\n    var result = {};\n    query.split(\"&\").forEach(function (part) {\n      var item = part.split(\"=\");\n      result[item[0]] = decodeURIComponent(item[1]);\n    });\n\n    if (field) {\n      return result[field];\n    }\n\n    return result;\n  }\n};\nexport var isWeixinBrowser = function isWeixinBrowser() {\n  var ua = navigator.userAgent.toLowerCase();\n  return /micromessenger/.test(ua);\n};","map":{"version":3,"sources":["/Users/lotuslwb/Documents/MJobs/orangeLove/utils/utils.js"],"names":["reg","isUrl","path","test","randomPrefix","possible","prefix","i","charAt","Math","floor","random","length","UniqueKey","generate","index","Date","getTime","isValidNumber","num","number","trim","NumberUtils","isValid","isPositive","isNegative","UrlParams","get","search","field","query","substr","result","split","forEach","part","item","decodeURIComponent","isWeixinBrowser","ua","navigator","userAgent","toLowerCase"],"mappings":"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","sourcesContent":["/* eslint no-useless-escape:0 */\nconst reg = /(((^https?:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)$/g;\n\nexport function isUrl(path) {\n    return reg.test(path);\n}\n\n\n// 新增代码\nconst randomPrefix = () => {\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let prefix = '';\n    for (let i = 0; i < 6; i++) {\n        prefix += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return prefix;\n};\n\nexport const UniqueKey = {\n    prefix: randomPrefix,\n    generate: (prefix, index) => {\n        if (!prefix) {\n            prefix = randomPrefix();\n        }\n        return `${prefix}_${new Date().getTime()}_${index || '0'}`;\n    }\n};\n\nconst isValidNumber = (num) => {\n    const number = +num;\n    if ((number - number) !== 0) {\n        return false;\n    }\n    if (number === num) {\n        return true;\n    }\n    if (typeof num === 'string') {\n        if (number === 0 && num.trim() === '') {\n            return false;\n        }\n        return true;\n    }\n    return false;\n};\n\nexport const NumberUtils = {\n    isValid: isValidNumber,\n    isPositive: (num) => {\n        if (isValidNumber(num)) {\n            return parseInt(num, 10) > 0;\n        }\n        return false;\n    },\n    isNegative: (num) => {\n        if (isValidNumber(num)) {\n            return parseInt(num, 10) < 0;\n        }\n        return false;\n    }\n};\n\nexport const UrlParams = {\n    get: (search, field) => {\n        const query = search.substr(1);\n        const result = {};\n        query.split(\"&\").forEach(function (part) {\n            const item = part.split(\"=\");\n            result[item[0]] = decodeURIComponent(item[1]);\n        });\n        if (field) {\n            return result[field];\n        }\n        return result;\n    }\n};\n\nexport const isWeixinBrowser = () => {\n    const ua = navigator.userAgent.toLowerCase();\n    return /micromessenger/.test(ua);\n};"]},"metadata":{},"sourceType":"module"}